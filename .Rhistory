#annotate otu table
rownames(map) <- map$sample_code
phyloseq_map <- sample_data(map)
taxa_otu_table_annotated <- merge_phyloseq(taxa_otu_table,phyloseq_map)
#merge sample by site
taxa_otu_table_annotated_merge <- merge_samples(taxa_otu_table_annotated, "site_name")
sample_data(taxa_otu_table_annotated_merge)$site_name <- levels(sample_data(taxa_otu_table_annotated)$site_name)
taxa_otu_table_annotated_merge <- transform_sample_counts(taxa_otu_table_annotated_merge, function(x) 100 * x/sum(x))
taxa_otu_table_annotated_merge
#change the taxa's rank names
rank_names(taxa_otu_table)
colnames(tax_table(taxa_otu_table)) <- c(k = "Kingdom", p = "Phylum", c = "Class",
o = "Order", f = "Family", g = "Genus", s = "Species")
colnames(tax_table(taxa_otu_table_annotated_merge)) <- c(k = "Kingdom", p = "Phylum", c = "Class",
o = "Order", f = "Family", g = "Genus", s = "Species")
#merge taxa by rank
taxa_otu_table_annotated_merge <- tax_glom(taxa_otu_table_annotated_merge, taxrank = "Phylum")
taxa_otu_table_annotated_merge
library(phyloseq)
taxa_otu_table <- import_biom("/Users/arifinabintarti/Documents/Parent/Data/single_rare.biom")
taxa_otu_table
taxa_otu_table.matrix = as(otu_table(taxa_otu_table), "matrix")
taxa_otu_table.matrix
taxa_otu_table.matrix = as(otu_table(taxa_otu_table), "matrix")
taxa_otu_table.matrix
taxa_tax_table.matrix = as(tax_table(taxa_otu_table), "matrix")
taxa_tax_table.matrix
taxa_otu_table.matrix
taxa_otu_table.matrix1_20=taxa_otu_table.matrix[31:75]
taxa_otu_table.matrix1_20
taxa_otu_table.matrix1_20=taxa_otu_table.matrix[,31:75]
taxa_otu_table.matrix1_20
taxa_otu_table
otu_table(taxa_otu_table.matrix1_20)
otu_even26k
taxa_otu_table
percent_abundance_phylum <- tax_glom(percent_abundance, taxrank="Phylum")
percent_abundance_phylum
taxa_otu_table
taxa_otu_table.matrix1_20
otu_table(taxa_otu_table.matrix1_20)
otu_table(taxa_otu_table.matrix1_20, taxa_are_rows)
otu_table(taxa_otu_table.matrix1_20, taxa_are_rows = as(tax_table(taxa_otu_table), "matrix")
)
otu_table(taxa_otu_table.matrix1_20, taxa_are_rows(otu_table(taxa_otu_table)))
taxa_otu_table1_20=otu_table(taxa_otu_table.matrix1_20, taxa_are_rows(otu_table(taxa_otu_table)))
taxa_otu_table1_20
otu_table(taxa_otu_table1_20)
taxa_otu_table
tax_table(taxa_otu_table1_20)
tax_table(taxa_otu_table)
taxa_otu_table1_20.taxamerged=merge_phyloseq(taxa_otu_table1_20,tax_table(taxa_otu_table))
taxa_otu_table1_20.taxamerged
taxa_otu_table1_20
taxa_otu_table1_20 <- otu_table(taxa_otu_table)[,31:75]
taxa_otu_table
taxa_otu_table1_20 <- otu_table(taxa_otu_table)[,31:75]
taxa_otu_table1_20
taxa_otu_table1_20 <- otu_table(taxa_otu_table)[,20:30]
taxa_otu_table1_20
taxa_otu_table1_20 <- otu_table(taxa_otu_table)[,31:75]
taxa_otu_table1_20.taxamerged <- merge_phyloseq(taxa_otu_table1_20,tax_table(taxa_otu_table))
taxa_otu_table1_20.taxamerged
# add environmental map
rownames(map) <- map$sample_code
rownames(map)
phyloseq_map <- sample_data(map)
phyloseq_map
phyloseq_map <- sample_data(map)[31:75,]
phyloseq_map
phyloseq_map1_20 <- sample_data(map)[31:75,]
phyloseq_map1_20
taxa_otu_table1_20.taxamerged.phyl <- merge_phyloseq(taxa_otu_table1_20.taxamerged,phyloseq_map1_20)
taxa_otu_table1_20.taxamerged.phyl
taxa_otu_table1_20.taxamerged.phyl
otu_even26k <- t(rrarefy(t(otu), min(colSums(otu))))
head(otu_even26k)
otu_even26k.31_75 <- otu_even26k[,31:75]
otu_rare_PA <- 1*(otu_even26k>0)
otu_rare_PA.31_75 <- 1*(otu_even26k.31_75>0)
s <- specnumber(otu_even26k, MARGIN = 2)
s.31_75 <- specnumber(otu_even26k.31_75, MARGIN = 2)
h <- diversity(t(otu_even26k), index = 'shannon')
h.31_75 <- diversity(t(otu_even26k.31_75), index = 'shannon')
pielou <- h/log(s)
pielou.31_75 <- h.31_75/log(s.31_75)
map.20 <- map[31:75,]
map.div <- map
map.div.31_75 <- map[31:75,]
map.div$Richness <- s
map.div.31_75$Richness <- s.31_75
map.div$Shannon <- h
map.div.31_75$Shannon <- h.31_75
map.div$Pielou <- pielou
map.div.31_75$Pielou <- pielou.31_75
names(map.div)
names(map.div.31_75)
map.alpha <- melt(map.div, id.vars=c('site_name', 'cultivar', 'rootstock'), measure.vars=c('Richness', 'Shannon', 'Pielou'))
ggplot(map.alpha, aes(y=value, x=site_name)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot()+
geom_point()+
theme(axis.text.x=element_text(angle=90, hjust=1))
map.alpha.20 <- melt(map.div.31_75, id.vars='site_name', measure.vars='Richness', 'Shannon', 'Pielou'))
map.alpha.20 <- melt(map.div.31_75, id.vars='site_name', measure.vars=c('Richness', 'Shannon', 'Pielou'))
# ggplot for 20 blocks
ggplot(map.alpha.20, aes(y=value, x=site_name)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot()+
geom_point()+
theme(axis.text.x=element_text(angle=90, hjust=1))
# ggplot for 20 blocks
ggplot(map.alpha.20, aes(y=value, x=site_name)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot()+
geom_point(aes(color=site_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
# ggplot for 20 blocks
ggplot(map.alpha.20, aes(y=value, x=site_name)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot(aes(color=site_name))+
geom_point(aes(color=site_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
map.alpha.20 <- melt(map.div.31_75, id.vars='site_name', measure.vars=('Richness')
# ggplot for 20 blocks
ggplot(map.alpha.20, aes(y=value, x=site_name)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot(aes(color=site_name))+
geom_point(aes(color=site_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
map.alpha.20 <- melt(map.div.31_75, id.vars='site_name', measure.vars=('Richness')
map.alpha.20 <- melt(map.div.31_75, id.vars='site_name', measure.vars=('Richness'))
map.alpha.20 <- melt(map.div.31_75, id.vars='site_name', measure.vars='Richness')
# ggplot for 20 blocks
ggplot(map.alpha.20, aes(y=value, x=site_name)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot(aes(color=site_name))+
geom_point(aes(color=site_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
map.alpha.20 <- melt(map.div.31_75, id.vars='site_name', measure.vars=c('Richness','Shannon', 'Pielou'))
# ggplot for 20 blocks
ggplot(map.alpha.20, aes(y=value, x=rootstock)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot(aes(color=site_name))+
geom_point(aes(color=site_name))+
theme(axis.text.x=element_text(angle=90, hjust=1))
# ggplot for 20 blocks
ggplot(map.alpha.20, aes(y=value, x=rootstock)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot(aes(color=rootstock))+
geom_point(aes(color=r))+
theme(axis.text.x=element_text(angle=90, hjust=1))
map.alpha.20 <- melt(map.div.31_75, id.vars=c('site_name', 'cultivar', 'rootstock'), measure.vars=c('Richness','Shannon', 'Pielou'))
# ggplot for 20 blocks
ggplot(map.alpha.20, aes(y=value, x=rootstock)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot(aes(color=rootstock))+
geom_point(aes(color=r))+
theme(axis.text.x=element_text(angle=90, hjust=1))
# ggplot for 20 blocks
ggplot(map.alpha.20, aes(y=value, x=rootstock)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot(aes(color=rootstock))+
geom_point(aes(color=r))+
theme(axis.text.x=element_text(angle=90, hjust=1))
map.alpha.20 <- melt(map.div.31_75, id.vars=c('site_name', 'cultivar', 'rootstock'), measure.vars=c('Richness','Shannon', 'Pielou'))
# ggplot for 20 blocks
ggplot(map.alpha.20, aes(y=value, x=rootstock)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot(aes(color=rootstock))+
geom_point(aes(color=rootstock))+
theme(axis.text.x=element_text(angle=90, hjust=1))
# ggplot for 20 blocks
ggplot(map.alpha.20, aes(y=value, x=cultivar)) +
facet_wrap(~variable, scales = 'free_y') +
geom_boxplot(aes(color=cultivar))+
geom_point(aes(color=cultivar))+
theme(axis.text.x=element_text(angle=90, hjust=1))
library(vegan)
source('http://bioconductor.org/biocLite.R')
biocLite('phyloseq')
###barplot###
install.packages("phyloseq")
install.packages("phyloseq")
source('http://bioconductor.org/biocLite.R')
#install.packages(c('vegan', 'tidyverse'))
install.packages(c('vegan', 'tidyverse'))
install.packages(c("vegan", "tidyverse"))
#install.packages('reshape')
install.packages('reshape')
install.packages("reshape")
#source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
#biocLite()
biocLite()
library(vegan)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape)
#setwd('/Users/arifinabintarti/Documents/Parent/apple_replant/')
setwd('/Users/arifinabintarti/Documents/Parent/apple_replant/')
#print working directory for future references
wd <- print(getwd())
otu <- read.table('otu_table_v2.txt', sep='\t', header=T, row.names = 1)
map <- read.table('clean_map_data.csv', sep=',', header=TRUE)
head(otu)
dim(otu)
taxonomy <- otu[,'taxonomy']
taxonomy
otu <- otu[,-76]
set.seed(13)
otu_even26k <- t(rrarefy(t(otu), min(colSums(otu))))
head(otu_even26k)
###barplot###
install.packages("phyloseq")
install.packages("phyloseq")
install.packages("phyloseq")
install.packages("phyloseq")
source('http://bioconductor.org/biocLite.R')
biocLite('phyloseq')
library(phyloseq)
taxa_otu_table <- import_biom("/Users/arifinabintarti/Documents/Parent/Data/single_rare.biom")
taxa_otu_table
#annotate otu table
rownames(map) <- map$sample_code
phyloseq_map <- sample_data(map)
taxa_otu_table_annotated <- merge_phyloseq(taxa_otu_table,phyloseq_map)
#merge sample by site
taxa_otu_table_annotated_merge <- merge_samples(taxa_otu_table_annotated, "site_name")
sample_data(taxa_otu_table_annotated_merge)$site_name <- levels(sample_data(taxa_otu_table_annotated)$site_name)
taxa_otu_table_annotated_merge <- transform_sample_counts(taxa_otu_table_annotated_merge, function(x) 100 * x/sum(x))
#change the taxa's rank names
rank_names(taxa_otu_table)
colnames(tax_table(taxa_otu_table)) <- c(k = "Kingdom", p = "Phylum", c = "Class",
o = "Order", f = "Family", g = "Genus", s = "Species")
colnames(tax_table(taxa_otu_table_annotated_merge)) <- c(k = "Kingdom", p = "Phylum", c = "Class",
o = "Order", f = "Family", g = "Genus", s = "Species")
#merge taxa by rank
taxa_otu_table_annotated_merge <- tax_glom(taxa_otu_table_annotated_merge, taxrank = "Phylum")
taxa_otu_table
taxa_otu_table1_20 <- otu_table(taxa_otu_table)[,31:75]
taxa_otu_table1_20.taxamerged <- merge_phyloseq(taxa_otu_table1_20,tax_table(taxa_otu_table))
taxa_otu_table1_20.taxamerged
# add environmental map
rownames(map) <- map$sample_code
phyloseq_map1_20 <- sample_data(map)[31:75,]
phyloseq_map1_20
taxa_otu_table1_20.taxamerged.phyl <- merge_phyloseq(taxa_otu_table1_20.taxamerged,phyloseq_map1_20)
taxa_otu_table1_20.taxamerged.phyl
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
packageVersion("vegan")
packageVersion("phyloseq")
packageVersion("ggplot2")
library(grid)
packageVersion("grid")
# scale reads to even depth
taxamerged.scale <- taxa_otu_table1_20.taxamerged.phyl %>% scale_reads(round="round")
# scale reads to even depth
taxamerged.scale <- taxa_otu_table1_20.taxamerged.phyl %>%
scale_reads(round="round")
###PCoA Plot using Phyloseq###
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
# scale reads to even depth
taxamerged.scale <- taxa_otu_table1_20.taxamerged.phyl %>%
scale_reads(round="round")
library(scales)
# scale reads to even depth
taxamerged.scale <- taxa_otu_table1_20.taxamerged.phyl %>%
scale_reads(round="round")
install.packages("scales")
library(scales)
# scale reads to even depth
taxamerged.scale <- taxa_otu_table1_20.taxamerged.phyl %>%
scale_reads(round="round")
# scale reads to even depth
taxamerged.scale <- taxa_otu_table1_20.taxamerged.phyl %>%
scale_reads(round="round")
# scale reads to even depth
taxamerged.scale <- taxa_otu_table1_20.taxamerged.phyl %>%
scale_reads(round="round")
library(scales)
packageVersion("scales")
# scale reads to even depth
taxamerged.scale <- taxa_otu_table1_20.taxamerged.phyl %>%
scale_reads(round="round")
packageVersion("grid")
otu_even26k <- otu_even26k[rowSums(otu_even26k)>0,]
otu_even26k
otu_dist.20 <- vegdist(t(otu_even26k.31_75), method = 'bray')
library(vegan)
library(dplyr)
#install.packages(c('vegan', 'tidyverse'))
install.packages(c('vegan', 'tidyverse'))
install.packages(c("vegan", "tidyverse"))
#install.packages('reshape')
install.packages('reshape')
#source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
#biocLite()
biocLite()
library(vegan)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape)
otu_dist <- vegdist(t(otu_even26k), method='bray')
otu_dist.20 <- vegdist(t(otu_even26k.31_75), method = 'bray')
otu_pcoa.20 <- cmdscale(otu_dist.20, eig = T)
env.20=map[31:75,c(12:23, 25:37)]
env.20
View(env.20)
env=map[,c(9,11:22, 24:36)]
View(env)
ax1.scores.20=otu_pcoa.20$points[,1]
ax2.scores.20=otu_pcoa.20$points[,2]
env_fit.20 <- envfit(otu_pcoa.20, env.20, na.rm = TRUE)
ax1.20 <- otu_pcoa.20$eig[1]/sum(otu_pcoa.20$eig)
ax2.20 <- otu_pcoa.20$eig[2]/sum(otu_pcoa.20$eig)
map.20 <- cbind(map.20, ax1.scores.20, ax2.scores.20)
pcoa_plot.20 <- plot(otu_pcoa.20$points[,1], otu_pcoa.20$points[,2], xlab=paste("PCoA1: ",round(ax1.20,3)*100,"% var. explained", sep=""), ylab=paste("PCoA2: ",round(ax2.20,3)*100,"% var. explained", sep=""))
#PCoA plot with fit of environmental vectors
pcoa_plot <- plot(otu_pcoa$points[,1], otu_pcoa$points[,2], xlab=paste("PCoA1: ",round(ax1,3)*100,"% var. explained", sep=""), ylab=paste("PCoA2: ",round(ax2,3)*100,"% var. explained", sep=""))
pcoa_plot.20 <- plot(otu_pcoa.20$points[,1], otu_pcoa.20$points[,2], xlab=paste("PCoA1: ",round(ax1.20,3)*100,"% var. explained", sep=""), ylab=paste("PCoA2: ",round(ax2.20,3)*100,"% var. explained", sep=""))
plot(env_fit.20, p.max=0.05, col="red")
otu_even26k.31_75 <- otu_even26k[,31:75]
otu_even26k.31_75
####PCoA Plot using ggplot2####
otu_even26k.31_75
otu_even26k.31_75 <- t(otu_even26k.31_75)
otu_even26k.31_75
head(otu_even26k.31_75)
####PCoA Plot using ggplot2####
otu_even26k.31_75
otu_even26k <- otu_even26k[rowSums(otu_even26k)>0,]
otu_even26k
otu_even26k.31_75 <- otu_even26k[,31:75]
otu_even26k.31_75
####PCoA Plot using ggplot2####
otu_even26k.31_75
map.20 <- map[31:75,]
map.20
####PCoA Plot using ggplot2####
otu_even26k.31_75 <- t(otu_even26k.31_75)
map.20
map.20<-map.20[rownames(otu_even26k.31_75),]
map.20
otu_even26k.31_75<-subset(otu_even26k.31_75,rowSums(otu_even26k.31_75)!=0)
otu_even26k.31_75
View(otu_even26k)
View(otu_even26k)
View(otu_even26k.31_75)
View(mypred.ci)
otu_even26k.31_75
otu_even26k.31_75 <- otu_even26k.31_75/rowSums(otu_even26k.31_75)
otu_even26k.31_75
otu_even26k.31_75.adonis <- adonis(otu_even26k.31_75~.,data = map.20)
otu_even26k.31_75.adonis <- adonis(otu_even26k.31_75 ~ ., data = map.20)
#not finished yet#
scale_reads <- function(taxa_otu_table1_20.taxamerged.phyl, n) {
physeq.scale <-
transform_sample_counts(taxa_otu_table1_20.taxamerged.phyl, function(x) {
(n * x/sum(x))
})
otu_table(physeq.scale) <- floor(otu_table(physeq.scale))
physeq.scale <- prune_taxa(taxa_sums(physeq.scale) > 0, physeq.scale)
return(physeq.scale)
}
physeq.scale <- taxa_otu_table1_20.taxamerged.phyl %>%
scale_reads(round="round")
taxa_otu_table1_20.taxamerged.phyl
#Ordinate
taxa_pcoa <- ordinate(
physeq = taxa_otu_table1_20.taxamerged.phyl,
method = "PCoA",
distance = "bray"
)
# Plot
plot_ordination(
physeq = taxa_otu_table1_20.taxamerged.phyl,
ordination = taxa_pcoa,
color = "site_name",
title = "PCoA of Apple Orchard Bacterial Communities"
) +
scale_color_manual(values = c("#a65628", "red", "#ffae19",
"#4daf4a", "#1919ff", "darkorchid3", "magenta")
) +
geom_point(aes(color = site_name), alpha = 0.7, size = 4) +
geom_point(colour = "grey90", size = 1.5)
# Plot
plot_ordination(
physeq = taxa_otu_table1_20.taxamerged.phyl,
ordination = taxa_pcoa,
color = "site_name",
title = "PCoA of Apple Orchard Bacterial Communities"
) +
geom_point(aes(color = site_name), alpha = 0.7, size = 4) +
geom_point(colour = "grey90", size = 1.5)
# add environmental map only for certain variables
phyloseq_map_var<- sample_data(map)[31:75,]
phyloseq_map_var
# add environmental map only for certain variables
phyloseq_map_var<- sample_data(map)[31:75,c(12:23, 25:37)]
phyloseq_map_var
taxa_otu_table1_20.taxamerged.var <- merge_phyloseq(taxa_otu_table1_20.taxamerged,phyloseq_map_var)
taxa_otu_table1_20.taxamerged.var
#Ordinate
taxa_pcoa <- ordinate(
physeq = taxa_otu_table1_20.taxamerged.var,
method = "PCoA",
distance = "bray"
)
# Plot
plot_ordination(
physeq = taxa_otu_table1_20.taxamerged.var,
ordination = taxa_pcoa,
color = "site_name",
title = "PCoA of Apple Orchard Bacterial Communities"
) +
geom_point(aes(color = site_name), alpha = 0.7, size = 4) +
geom_point(colour = "grey90", size = 1.5)
# add environmental map only for certain variables
phyloseq_map_var<- sample_data(map)[31:75,c(4,12:23, 25:37)]
phyloseq_map_var
taxa_otu_table1_20.taxamerged.var <- merge_phyloseq(taxa_otu_table1_20.taxamerged,phyloseq_map_var)
taxa_otu_table1_20.taxamerged.var
#Ordinate
taxa_pcoa <- ordinate(
physeq = taxa_otu_table1_20.taxamerged.var,
method = "PCoA",
distance = "bray"
)
# Plot
plot_ordination(
physeq = taxa_otu_table1_20.taxamerged.var,
ordination = taxa_pcoa,
color = "site_name",
title = "PCoA of Apple Orchard Bacterial Communities"
) +
geom_point(aes(color = site_name), alpha = 0.7, size = 4) +
geom_point(colour = "grey90", size = 1.5)
# Remove datapoints with NA
taxa_not_na <- taxa_otu_table1_20.taxamerged.var %>%
subset_samples(
!is.na(lime_index)
)
bray_not_na <- phyloseq::distance(physeq = taxa_not_na, method = "bray")
bray_not_na
# CAP ordinate
cap_ord <- ordinate(
physeq = taxa_not_na,
method = "CAP",
distance = bray_not_na,
formula = ~ pH + lime_index + P_ppm + K_ppm + Ca_ppm + Mg_ppm + NO3N_ppm + NH4N_ppm
+ OM_percent + sand_percent + silt_percent + clay_percent + Lesion + Dagger + Ring + Pin + Stunt + Spiral + Tylenchs + Aphelenchs + Dorylaims + Monochs + BacterialFeeders + MycorrhizalFungi + Oligochaetes
)
# CAP plot
cap_plot <- plot_ordination(
physeq = taxa_not_na,
ordination = cap_ord,
color = "site_name",
axes = c(1,2)
) +
geom_point(aes(colour = site_name), alpha = 0.4, size = 4) +
geom_point(colour = "grey90", size = 1.5) +
)
# CAP plot
cap_plot <- plot_ordination(
physeq = taxa_not_na,
ordination = cap_ord,
color = "site_name",
axes = c(1,2)
) +
geom_point(aes(colour = site_name), alpha = 0.4, size = 4) +
geom_point(colour = "grey90", size = 1.5)
# Now add the environmental variables as arrows
arrowmat <- vegan::scores(cap_ord, display = "bp")
# Add labels, make a data.frame
arrowdf <- data.frame(labels = rownames(arrowmat), arrowmat)
# Define the arrow aesthetic mapping
arrow_map <- aes(xend = CAP1,
yend = CAP2,
x = 0,
y = 0,
shape = NULL,
color = NULL,
label = labels)
label_map <- aes(x = 1.3 * CAP1,
y = 1.3 * CAP2,
shape = NULL,
color = NULL,
label = labels)
arrowhead = arrow(length = unit(0.02, "npc"))
# Make a new graphic
cap_plot +
geom_segment(
mapping = arrow_map,
size = .5,
data = arrowdf,
color = "gray",
arrow = arrowhead
) +
geom_text(
mapping = label_map,
size = 4,
data = arrowdf,
show.legend = FALSE
)
