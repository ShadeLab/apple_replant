ozone <- c(gardenB, gardenC)
var(gardenA)
var(gardenB)
F.ratio <- var(gardenA)/var(gardenB)
F.ratio
# Graphing
ozone <- c(gardenA, gardenB)
label <- factor(c(rep("A", 10), rep("B", 10)))
ozone
label
boxplot(ozone~label, notch=T, xlab="Garden", ylab="Ozone")
boxplot(ozone~label, notch=T, xlab="Garden", ylab="Ozone")
wilcox.test(gardenA, gardenB)
upset <- c(0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,1)
upset <- c(0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,1)
upset
sum(upset)
p.hat <- mean(upset)
p.hat
z <- (p.hat-0.2)/sqrt(0.2*0.8/29)
z
2*(1-pnorm(z))
p.hat + c(-1,1)*qnorm(0.975)*sqrt(p.hat*(1-p.hat)/29)
prop.test(x=sum(upset), n=length(upset), p=0.2, correct = FALSE)
x1 <- 180
n1 <- 233
p.hat1 <- x1/n1
x2 <- 175
n2 <- 197
p.hat2 <- x2/n2
p.hat1
p.hat2
# output: p.hat1=0.77 (77% of microbiologist pass), p.hat2=0.88 (88% of analytical chemist pass)
p.star <- (x1+x2)/(n1+n2)
p.star
z <- (p.hat2-p.hat1)/sqrt(p.star*(1-p.star)*(1/n1+1/n2))
z
1-pnorm(z)
prop.test(x=c(x2,x1), n=c(n2,n1), alternative="greater", correct = FALSE)
# output: X-squared = 9.9395, df = 1, p-value = 0.0008089 --> reject the null hypothesis
(p.hat2-p.hat1)+c(-1,1)*qnorm(0.975)*sqrt(p.hat1*(1-p.hat1)/n1+p.hat2*(1-p.hat2)/n2)
x <- seq(0,20, length=100)
x
plot(x, dchisq(x, df=1), type="l", xlim=c(0,15), ylim=c(0,0.5), ylab="density", xlab="x")
lines(x, dschisq(x, df=5), lty=2)
lines(x, dchisq(x, df=5), lty=2)
lines(x, dchisq(x, df=10), lty=3)
abline(h=0, col="gray")
abline(v=0, col="gray")
legend("topright", legend = c("df=1", "df=5", "df=10"), lty=3)
legend("topright", legend = c("df=1", "df=5", "df=10"), lty=1:3)
x <- seq(0,20, length=100)
x
plot(x, dchisq(x, df=1), type="l", xlim=c(0,15), ylim=c(0,0.5), ylab="density", xlab="x")
lines(x, dchisq(x, df=5), lty=2)
lines(x, dchisq(x, df=10), lty=3)
abline(h=0, col="gray")
abline(v=0, col="gray")
legend("topright", legend = c("df=1", "df=5", "df=10"), lty=1:3)
eqp <- c(2,3,2,3,2,1,3,3,2,2,3,2,2,2,3,3,3,2,3,2,2,3,1,3,2,2,2,1,3,2,2,2,2,1,2,1,1,1,2,2,2,3,1,2,1,2,1,2,1,3,3)
eqp <- c(2,3,2,3,2,1,3,3,2,2,3,2,2,2,3,3,3,2,3,2,2,3,1,3,2,2,2,1,3,2,2,2,2,1,2,1,1,1,2,2,2,3,1,2,1,2,1,2,1,3,3)
n <- length(eqp)
n
eqp.table <- table(eqp)
eqp.table
# output: eqp
# 1  2  3
# 11 25 15
eqp.table/n
# output:
# 1         2         3
# 0.2156863 0.4901961 0.2941176
expected <- 1/3*n
expected
# output: 17 for each level using the equipment
# make a matrix
eqp.matrix <- cbind(1:3, eqp.table, expected, (eqp.table-expected)^2/expected)
eqp.matrix
dimnames(eqp.matrix) <- list(c("glasses", "glasses&labcoat", "glasses&labcoat&gloves"), c("i", "Ei", "(Oi-Ei)^2/Ei"))
eqp.matrix <- cbind(1:3, eqp.table, expected, (eqp.table-expected)^2/expected)
eqp.matrix
dimnames(eqp.matrix) <- list(c("glasses", "glasses&labcoat", "glasses&labcoat&gloves"), c("i", "Ei", "(Oi-Ei)^2/Ei"))
eqp.matrix
dimnames(eqp.matrix) <- list(c("glasses","glasses&labcoat","glasses&labcoat&gloves"), c("i","Oi","Ei","(Oi-Ei)^2/Ei"))
eqp
eqp.matrix
# output:
# i Oi Ei (Oi-Ei)^2/Ei
# glasses                1 11 17    2.1176471
# glasses&labcoat        2 25 17    3.7647059
# glasses&labcoat&gloves 3 15 17    0.2352941
X2 <- sum(eqp.matrix[,4])
X2
1-pchisq(X2, df=2)
chisq.test(x=eqp.table)
# same output --> the expected value is wrong
# If distribution is predicted to be 0.25, 0.50, and 0.25 after annual safety training
chisq.test(x=eqp.table, p=c(0.25, 0.5, 0.25))
skin <- matrix(c(20,32,8,52,9,72,8,32,16,64,30,12), 4,3, dimnames = list(c("Injection", "Tablet", "Laser", "Herbal"), c("None", "Partial", "Full")))
skin
# output:
#           None Partial Full
# Injection   20       9   16
# Tablet      32      72   64
# Laser        8       8   30
# Herbal      52      32   12
kr <- nrow(skin)
kr
kc <- ncol(skin)
kc <- ncol(skin)
kc
rowSums(skin)
colSums(skin)
source('~/.active-rstudio-document', echo=TRUE)
rep(colSums(skin), each=kr)
rep(colSums(skin), each=kr)
rowSums(skin)
colSums(skin)
rep(colSums(skin), each=kr)*rowSums(skin)
rep(colSums(skin), each=kr)*rowSums(skin)/sum(skin)
skin.expected <- matrix(rep(colSums(skin), each=kr)*rowSums(skin)/sum(skin), nrow = kr, ncol = kc, dimnames = dimnames(skin))
skin.expected
# output:
#               None  Partial     Full
# Injection 14.19718 15.33803 15.46479
# Tablet    53.00282 57.26197 57.73521
# Laser     14.51268 15.67887 15.80845
# Herbal    30.28732 32.72113 32.99155
skin.array <- array(data=cbind(skin, skin.expected, (skin-skin.expected)^2/skin.expected), dim = c(kr,kc,3), dimnames = list(dimnames(skin)[[1]], dimnames(skin)[[2]], c("O[i,j]", "E[i,j]", "(O[i,j]-E[i,j])^2/E[i,j]")))
skin.array
# chi-squared test
X2 <- sum(skin.array[,3])
# chi-squared test
X2 <- sum(skin.array[,,3])
X2
1-pchisq(X2, df=(kr-1)*(kc-1))
chisq.test(x=skin)
datasets::PlantGrowth
View()
mean.ctrl <- mean(PlantGrowth$weight, "ctrl")
mean.ctrl <- mean(PlantGrowth$group == "ctrl")
mean.ctrl
mean.ctrl <- mean(PlantGrowth$weight, group == "ctrl")
mean.ctrl <- mean(PlantGrowth$weight[PlantGrowth$group=="ctrl"])
mean.ctrl
# output : 5.032
mean.trt1 <- mean(PlantGrowth$weight[PlantGrowth$group=="trt1"])
mean.trt1
# output: 4.661
mean.trt2 <- mean(PlantGrowth$weight[PlantGrowth$group=="trt2"])
mean.trt2
# output: 5.526 (larger)
ctrl <- PlantGrowth$weight[PlantGrowth$group=="ctrl"])
# output: 5.526 (larger)
ctrl <- PlantGrowth$weight([PlantGrowth$group=="ctrl"])
# output: 5.526 (larger)
ctrl <- PlantGrowth$weight[PlantGrowth$group=="ctrl"]
ctrl
trt1 <- PlantGrowth$weight[PlantGrowth$group=="trt1"]
trt2 <- PlantGrowth$weight[PlantGrowth$group=="trt2"]
t.test(x=trt2, y=ctrl, alternative="greater", conf.level=0.9)
#
t.test(x=ctrl, y=trt2, alternative="greater", conf.level=0.9)
# output: 5.526 (larger)
sd.ctrl <- sd(PlantGrowth$weight[PlantGrowth$group=="ctrl"])
sd.ctrl
sd. trt1 <- sd(PlantGrowth$weight[PlantGrowth$group=="trt1")
sd.trt1 <- sd(PlantGrowth$weight[PlantGrowth$group=="trt1")
sd.trt1 <- sd(PlantGrowth$weight[PlantGrowth$group=="trt1"])
sd.trt2 <- (PlantGrowth$weight[PlantGrowth$group=="trt2"])
sd.ratio1 <- sd.ctrl/sd.trt1
sd.ratio1
sd.ratio1 <- sd.trt1/sd.ctrl
sd.ratio1
# output: 1.361151
sd. ratio2 <- sd.trt2/sd.ctrl
# output: 1.361151
sd.ratio2 <- sd.trt2/sd.ctrl
sd.ratio2
# output: 1.361151
sd.ratio2 <- sd.trt2/sd.ctrl
sd.ratio2
sd.trt2 <- (PlantGrowth$weight[PlantGrowth$group=="trt2"])
sd.trt2
sd.trt2 <- sd(PlantGrowth$weight[PlantGrowth$group=="trt2"])
sd.trt2
# output: 1.361151
sd.ratio2 <- sd.trt2/sd.ctrl
sd.ratio2
sd.ratio1 <- sd.trt1/sd.ctrl
sd.ratio1
sd.trt2
sd.ctrl
# output: 1.361151
sd.ratio2 <- sd.trt2/sd.ctrl
sd.ratio2
t.test(x=ctrl, y=trt1, alternative="two.sided", conf.level = 0.95, var.equal = TRUE)
t.test(x=ctrl, y=trt2, alternative="two.sided", conf.level = 0.95, var.equal = TRUE)
x1 <- 97
n1 <- 445
p.hat1 <- x1/n1
x2 <- 90
n2 <- 419
p.hat2 <- x2/n2
p.hat1
p.hat2
# output: p.hat1=0.2179775 (21% of resident in state 1 is support), p.hat2=0.2147971(21% of resident in state 2 is support)
p.star <- (x1+x2)/(n1+n2)
p.star
z <- (p.hat2-p.hat1)/sqrt(p.star*(1-p.star)*(1/n1+1/n2))
z
1-pnorm(z)
prop.test(x=c(x2,x1), n=c(n2,n1), alternative="greater", correct = FALSE)
prop.test(x=c(x1,x2), n=c(n1,n2), alternative="greater", correct = FALSE)
prop.test(x=c(x2,x1), n=c(n2,n1), alternative="two-sided", correct = FALSE)
prop.test(x=c(x2,x1), n=c(n2,n1), alternative="less", correct = FALSE)
# construct the CI
(p.hat1-p.hat2)+c(-1,1)*qnorm(0.975)*sqrt(p.hat1*(1-p.hat1)/n1+p.hat2*(1-p.hat2)/n2)
datasets::HairEyeColor
# output:
#           None Partial Full
# Injection   20       9   16
# Tablet      32      72   64
# Laser        8       8   30
# Herbal      52      32   12
kr <- nrow(skin)
kr
rowSums(skin)
kr <- nrow(HairEyeColor)
kr
kc <- ncol(HairEyeColor)
kc
rowSums(HairEyeColor)
datasets::HairEyeColor
colSums(HairEyeColor)
dim(HairEyeColor)
HairEyeColor$Sex=="Male"
result = as.matrix(cbind(Female, Male))
datasets::HairEyeColor
all.hair.eye <- HairEyeColor[,,1]+HairEyeColor[,,2]
all.hair.eye
chisq.test(x=all.hair.eye)
#Example of a loop for Fina
install.packages(c('vegan', 'tidyverse'))
install.packages(c("vegan", "tidyverse"))
install.packages('reshape')
install.packages("reshape")
source("https://bioconductor.org/biocLite.R")
biocLite()
library(vegan)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape)
#setwd('/Users/arifinabintarti/Documents/apple_replant/')
otu <- read.table('otu_table_v2.txt', sep='\t', header=T, row.names = 1)
map <- read.table('clean_map_data.csv', header=TRUE, sep=",")
otu
map
head(otu)
dim(otu)
taxonomy <- otu[,'taxonomy']
tax=cbind(row.names(otu), as.character(taxonomy))
tax <- cbind(row.names(otu), as.character(taxonomy))
tax
otu <- otu[,-76]
set.seed(13)
#summary(otu)
#min. number of sequences is ~26K
#subsample to an even number of sequences per sample
otu_even26k <- t(rrarefy(t(otu), min(colSums(otu))))
head(otu_even26k)
otu_even26k <- otu_even26k[rowSums(otu_even26k)>0,]
otu_rare_PA <- 1*(otu_even26k>0)
s <- specnumber(otu_even26k, MARGIN = 2)
h <- diversity(t(otu_even26k), index = 'shannon')
pielou <- h/log(s)
map.div <- map
block=unique(map[,"site_name"])
block <- unique(map[,"site_name"])
block
names(map)
block <- unique(map["orchard_block_number"])
block
block <- unique(map[,"orchard_block_number"])
block
block <- unique(map["site_name"])
block
block <- unique(map[,"site_name"])
block
for (i in 1:length(block)){
temp <- otu_even26k[,map[,"site_name"]==block[i]]
samples <- ncol(temp)
totalseq <- sum(temp)
r <- rowSums(temp)
s <- sort(r, decreasing=TRUE, index.return=TRUE)
temp.s <- temp[s$ix,]
temp.10 <- temp.s[1:10,]
cumulcontri <- sum(temp.10)/totalseq
print(cumulcontri)
names <- row.names(temp.10)
id=NULL
for(j in 1:length(names)){
id.temp=tax[grep(names[j],tax[,1]),]
id=rbind(id, id.temp)
}
colnames(id)=c("otuID", "SilvaTaxonomy")
write.table(id, file= paste(block[i],".txt", sep=""),sep="\t", quote=FALSE)
out=c(samples,cumulcontri)
}
block <- unique(map[,"site_name"])
block
block <- unique(map[,"site_name"])
block
#subset the OTU table to only include those blocks
temp <- otu_even26k[,map[,"site_name"]==block[i]]
temp
block <- unique(map[,"site_name"])
block
#subset the OTU table to only include those blocks
temp <- otu_even26k[,map[,"site_name"]==block[i]]
for (i in 1:length(block)){
#subset the OTU table to only include those blocks
temp <- otu_even26k[,map[,"site_name"]==block[i]]
#how many samples in this block?
samples <- ncol(temp)
#how many total sequences in the whole dataset?
totalseq <- sum(temp)
#what is the number of sequences per OTU?
r <- rowSums(temp)
#sort the otus by abundance, with the most abundant first
s <- sort(r, decreasing=TRUE, index.return=TRUE)
#using the returned index from the sort (s$ix), sort the dataset with the most abundant OTU first
temp.s <- temp[s$ix,]
#pull out the top ten
temp.10 <- temp.s[1:10,]
#what is the cumulative contribution of the top ten OTUs?
cumulcontri <- sum(temp.10)/totalseq
print(cumulcontri)
#who are these top 10 OTUs?
names <- row.names(temp.10)
id=NULL
for(j in 1:length(names)){
id.temp=tax[grep(names[j],tax[,1]),]
id=rbind(id, id.temp)
}
colnames(id)=c("otuID", "SilvaTaxonomy")
write.table(id, file= paste(block[i],".txt", sep=""),sep="\t", quote=FALSE)
#vector for output data
out=c(samples,cumulcontri)
}
rowSums(temp)
#what is the number of sequences per OTU?
r <- rowSums(temp)
#how many samples in this block?
samples <- ncol(temp)
#what is the number of sequences per OTU?
r <- rowSums(temp)
block
block
block <- block[,-26:27,-36:37]
block <- block[,-26]
block <- unique(map[,"site_name"])
dim(block)
block <- unique(map[,"site_name"])
block
block.subset <- subset(map, site_name != "FrensNorth", "FrensSouth", "RothNorth", "RothSouth")
block.subset <- subset(map$site_name!= "FrensNorth", "FrensSouth", "RothNorth", "RothSouth")
transform(map, site_name=-Clarksville)
transform(map, site_name = -Clarksville)
block.subset <- subset(map$site_name[1:11])
block <- map$site_name[1:11]
block
block <- map$site_name[1:25, 28:35, 38:45]
block <- map$site_name[1:25, 28:35]
block <- map$site_name[1:25]
block
map.alpha <- melt(map.div, id.vars=c('site_name', 'cultivar', 'rootstock', 'orchard_block_number'), measure.vars=c('Richness', 'Shannon', 'Pielou'))
map.div <- map
map.div$Richness <- s
map.div$Shannon <- h
map.div$Pielou <- pielou
names(map.div)
map.alpha <- melt(map.div, id.vars=c('site_name', 'cultivar', 'rootstock', 'orchard_block_number'), measure.vars=c('Richness', 'Shannon', 'Pielou'))
map.alpha.20blocks <- map.alpha[c(31:75, 106:150, 181:225),]
map.alpha.20blocks <- map.alpha[c(31:75, 106:150, 181:225),]
map.alpha.20blocks
map.div <- map
map.div
map.div <- map[1:25, 28:35, 38;45]
map.div <- map[1:25, 28:35, 38:45]
map.div <- map[1:25, 28:35, 38:45]
map.div
map.div <- map[c(1:25, 28:35, 38:45)]
map.div <- map[c(1:25, 28:35, 38:45,)]
map.div <- map[c(1:25, 28:35, 38:45),]
map.div
View(map.div)
block <- unique(map.div[,"site_name"])
block
block
View(block)
map.div <- map[c(1:25, 28:35, 38:45),]
map.div
map.div
map
map.div <- map[c(1:55, 58:65, 68:75),]
map.div
View(map.div)
block <- unique(map.div[,"site_name"])
block
View(block)
#summary(otu)
#min. number of sequences is ~26K
#subsample to an even number of sequences per sample
otu_even26k <- t(rrarefy(t(otu), min(colSums(otu))))
head(otu_even26k)
for (i in 1:length(block)){
#subset the OTU table to only include those blocks
temp <- otu_even26k[,map[,"site_name"]==block[i]]
#how many samples in this block?
samples <- ncol(temp)
#how many total sequences in the whole dataset?
totalseq <- sum(temp)
#what is the number of sequences per OTU?
r <- rowSums(temp)
#sort the otus by abundance, with the most abundant first
s <- sort(r, decreasing=TRUE, index.return=TRUE)
#using the returned index from the sort (s$ix), sort the dataset with the most abundant OTU first
temp.s <- temp[s$ix,]
#pull out the top ten
temp.10 <- temp.s[1:10,]
#what is the cumulative contribution of the top ten OTUs?
cumulcontri <- sum(temp.10)/totalseq
print(cumulcontri)
#who are these top 10 OTUs?
names <- row.names(temp.10)
id=NULL
for(j in 1:length(names)){
id.temp=tax[grep(names[j],tax[,1]),]
id=rbind(id, id.temp)
}
colnames(id)=c("otuID", "SilvaTaxonomy")
write.table(id, file= paste(block[i],".txt", sep=""),sep="\t", quote=FALSE)
#vector for output data
out=c(samples,cumulcontri)
}
for (i in 1:length(block)){
temp <- otu_even26k[,map[,"site_name"]==block[i]]
samples <- ncol(temp)
totalseq <- sum(temp)
r <- rowSums(temp)
s <- sort(r, decreasing=TRUE, index.return=TRUE)
temp.s <- temp[s$ix,]
temp.10 <- temp.s[1:10,]
cumulcontri <- sum(temp.10)/totalseq
print(cumulcontri)
names <- row.names(temp.10)
id=NULL
for(j in 1:length(names)){
id.temp=tax[grep(names[j],tax[,1]),]
id=rbind(id, id.temp)
}
colnames(id)=c("otuID", "SilvaTaxonomy")
write.table(id, file= paste(block[i],".txt", sep=""),sep="\t", quote=FALSE)
out=c(samples,cumulcontri)
}
map.div <- map[c(56:57,66:67),]
map.div
block <- unique(map.div[,"site_name"])
block
r <- rowSums(temp)
for (i in 1:length(block)){
temp <- otu_even26k[,map[,"site_name"]==block[i]]
samples <- ncol(temp)
totalseq <- sum(temp)
r <- rowSums(temp)
s <- sort(r, decreasing=TRUE, index.return=TRUE)
temp.s <- temp[s$ix,]
temp.10 <- temp.s[1:10,]
cumulcontri <- sum(temp.10)/totalseq
print(cumulcontri)
names <- row.names(temp.10)
id=NULL
for(j in 1:length(names)){
id.temp=tax[grep(names[j],tax[,1]),]
id=rbind(id, id.temp)
}
colnames(id)=c("otuID", "SilvaTaxonomy")
write.table(id, file= paste(block[i],".txt", sep=""),sep="\t", quote=FALSE)
out=c(samples,cumulcontri)
}
for (i in 1:length(block)){
temp <- otu_even26k[,map[,"site_name"]==block[i]]
samples <- ncol(temp)
totalseq <- sum(temp)
r <- temp[ , 1]
s <- sort(r, decreasing=TRUE, index.return=TRUE)
temp.s <- temp[s$ix,]
temp.10 <- temp.s[1:10,]
cumulcontri <- sum(temp.10)/totalseq
print(cumulcontri)
names <- row.names(temp.10)
id=NULL
for(j in 1:length(names)){
id.temp=tax[grep(names[j],tax[,1]),]
id=rbind(id, id.temp)
}
colnames(id)=c("otuID", "SilvaTaxonomy")
write.table(id, file= paste(block[i],".txt", sep=""),sep="\t", quote=FALSE)
out=c(samples,cumulcontri)
}
